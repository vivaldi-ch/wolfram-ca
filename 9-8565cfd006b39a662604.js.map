{"version":3,"sources":["webpack:///./src/components/wolfram-array.js"],"names":["WolframArray","componentDidMount","this","updateCanvas","_this$props","props","value","width","height","ctx","canvas","getContext","getWolframCAArray","forEach","object","index","o","objectIndex","fillRect","render","_this","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","table","ref","notFound","React","Component","propTypes","PropTypes","number","isRequired"],"mappings":"gLASMA,oGACJC,kBAAA,WACEC,KAAKC,kBAGPA,aAAA,WAAe,IAAAC,EACoBF,KAAKG,MAA9BC,EADKF,EACLE,MAAOC,EADFH,EACEG,MAAOC,EADTJ,EACSI,OAChBC,EAAMP,KAAKQ,OAAOC,WAAW,MAEnCC,YAAkBN,EAAOC,EAAOC,GAAQK,QAAQ,SAACC,EAAQC,GACvDD,EAAOD,QAAQ,SAACG,EAAGC,GACP,IAAND,GACFP,EAAIS,SAdI,GAeND,EAfM,GAgBNF,EAhBM,cAyBhBI,OAAA,WAAS,IAAAC,EAAAlB,KACCI,EAAUJ,KAAKG,MAAfC,MAWR,OAVsBA,EAAQ,GAAKA,EAAQ,IAGzCe,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOC,OACrBL,EAAAC,EAAAC,cAAA,UAAQI,IAAK,SAACjB,GAAaU,EAAKV,OAASA,GAAWH,MAAO,IAAKC,OAAQ,QAG1Ea,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAOG,UAAtB,uBAhCqBC,IAAMC,WAuCjC9B,EAAa+B,UAAY,CACvBzB,MAAO0B,IAAUC,OAAOC,WACxB3B,MAAOyB,IAAUC,OAAOC,WACxB1B,OAAQwB,IAAUC,OAAOC,YAGZlC","file":"9-8565cfd006b39a662604.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getWolframCAArray } from '../../utils/wolfram';\n\nimport styles from './wolfram-ca.module.css';\n\nconst CELL_SIDE = 15;\n\nclass WolframArray extends React.Component {\n  componentDidMount() {\n    this.updateCanvas();\n  }\n\n  updateCanvas() {\n    const { value, width, height } = this.props;\n    const ctx = this.canvas.getContext('2d');\n\n    getWolframCAArray(value, width, height).forEach((object, index) => {\n      object.forEach((o, objectIndex) => {\n        if (o === 1) {\n          ctx.fillRect(\n            objectIndex * CELL_SIDE,\n            index * CELL_SIDE,\n            CELL_SIDE,\n            CELL_SIDE,\n          );\n        }\n      });\n    });\n  }\n\n  render() {\n    const { value } = this.props;\n    const isNumberValid = value > 0 && value < 256;\n\n    const wolframHTML = isNumberValid ? (\n      <div className={styles.table}>\n        <canvas ref={(canvas) => { this.canvas = canvas; }} width={765} height={7500} />\n      </div>\n    ) : (\n      <h4 className={styles.notFound}>Invalid number.</h4>\n    );\n\n    return wolframHTML;\n  }\n}\n\nWolframArray.propTypes = {\n  value: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n};\n\nexport default WolframArray;\n"],"sourceRoot":""}