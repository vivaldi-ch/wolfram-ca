{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.function.name.js"],"names":["IndexPage","props","_this","_React$Component","call","this","state","index","handleInputChange","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default","event","_this$setState","target","value","name","setState","render","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","_components_seo__WEBPACK_IMPORTED_MODULE_6__","title","keywords","style","marginTop","textAlign","href","type","onChange","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","React","Component","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","data","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","defaultProps","arrayOf","Header","siteTitle","react_default","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","Layout","Fragment","header","display","flexDirection","paddingTop","alignSelf","_755544856","node","dP","f","FProto","Function","prototype","nameRE","configurable","get","match","e"],"mappings":"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","file":"component---src-pages-index-js-264baba2114a359d24d6.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nclass IndexPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { index: '' };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const { target } = event;\n    const { value } = target;\n    const { name } = target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { index } = this.state;\n    return (\n      <Layout>\n        <SEO title=\"Home\" keywords={['gatsby', 'application', 'react']} />\n        <p\n          style={{\n            marginTop: '1em',\n            textAlign: 'center',\n          }}\n        >\n          Enter a number from 1 to 255. This will generate a pattern based on Wolfram&lsquo;s &nbsp;\n          <a href=\"https://en.wikipedia.org/wiki/Elementary_cellular_automaton\">\n            Elementary Cellular Automaton\n          </a>\n          .\n        </p>\n        <form\n          style={{\n            marginTop: '3em',\n            textAlign: 'center',\n          }}\n        >\n          <input type=\"number\" name=\"index\" value={index} onChange={this.handleInputChange} />\n          <Link to={index ? `/wolfram/${index}` : '/'}>\n            <button type=\"submit\">Submit</button>\n          </Link>\n        </form>\n      </Layout>\n    );\n  }\n}\n\nexport default IndexPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({\n  description, lang, meta, keywords, title,\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:title',\n          content: title,\n        },\n        {\n          property: 'og:description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: site.siteMetadata.author,\n        },\n        {\n          name: 'twitter:title',\n          content: title,\n        },\n        {\n          name: 'twitter:description',\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n              name: 'keywords',\n              content: keywords.join(', '),\n            }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n  description: '',\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      marginBottom: '0.45rem',\n      marginTop: '4em',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '0 1.0875rem',\n        textAlign: 'center',\n      }}\n    >\n      <h2 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'black',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h2>\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: '',\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport './layout.css';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            display: 'flex',\n            flexDirection: 'column',\n            paddingTop: 0,\n          }}\n        >\n          <main\n            style={{\n              alignSelf: 'center',\n            }}\n          >\n            {children}\n          </main>\n        </div>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}